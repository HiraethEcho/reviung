/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            bindings = <&none>, <&none>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   BKSP    |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |    '      |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT(RET) |
            //                         | ALT | LWR | SPC | RSE  | ALT |

            bindings = <
&kp TAB          &kp Q  &kp W  &kp E         &kp R            &kp T               &kp Y  &kp U                      &kp I         &kp O    &kp P     &kp GRAVE
&mt LCTRL ENTER  &kp A  &kp S  &kp D         &kp F            &kp G               &kp H  &kp J                      &kp K         &kp L    &kp SEMI  &kp SQT
&kp BACKSLASH    &kp Z  &kp X  &kp C         &kp V            &kp B               &kp N  &kp M                      &kp COMMA     &kp DOT  &kp FSLH  &mt RSHFT RET
                               &kp LEFT_GUI  &mt LALT ESCAPE         &lt 1 SPACE         &mt RIGHT_SHIFT BACKSPACE  &lt 2 DELETE
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      DEL    |
            // |    |  _  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |       ~     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(SPACE) |
            //                       |     |     | RET | ADJ |     |

            bindings = <
&trans  &kp N1     &kp N2    &kp N3     &kp N4                &kp N5                         &kp N6            &kp N7             &kp N8          &kp N9           &kp N0          &kp DEL
&trans  &kp EXCL   &kp AT    &kp HASH   &kp DOLLAR            &kp PERCENT                    &kp LEFT          &kp DOWN           &kp UP          &kp RIGHT        &kp MINUS       &kp EQUAL
&trans  &kp CARET  &kp AMPS  &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp UNDERSCORE  &mt RSHFT PLUS
                             &trans     &trans                                       &trans                    &trans             &trans
            >;
        };

        raise_layer {
            // ----------------------------------------------------------------------------
            // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
            //                       |     | ADJ | BKSP |    |     |

            bindings = <
&bt BT_SEL 0  &kp F1                &kp F2                &kp F3                &kp F4                &kp F5                  &kp F6    &kp F7         &kp F8       &kp F9     &kp F10          &bt BT_CLR_ALL
&bt BT_SEL 1  &kp LA(NUMBER_1)      &kp LA(NUMBER_2)      &kp LA(NUMBER_3)      &kp LA(NUMBER_4)      &kp LA(N5)              &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &kp F11          &kp F12
&bt BT_SEL 2  &kp LA(LS(NUMBER_1))  &kp LA(LS(NUMBER_2))  &kp LA(LS(NUMBER_3))  &kp LA(LS(NUMBER_4))  &kp LA(LS(N5))          &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &rgb_ug RGB_TOG  &rgb_ug RGB_EFF
                                                          &trans                &trans                                &trans            &trans         &trans
            >;
        };
    };
};
