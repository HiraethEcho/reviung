/*
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <reviung41.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define LOWER  1
#define RAISE  2
#define ADJUST 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
  combos { compatible = "zmk,combos"; };

  behaviors {
    tdwin: tdwin {
      compatible = "zmk,behavior-tap-dance";
      label = "TDWIN";
      #binding-cells = <0>;
      bindings = <&kp LEFT_GUI>, <&kp LG(GRAVE)>;
    };

    tdquotshift: tdquotshift {
      compatible = "zmk,behavior-tap-dance";
      label = "TDQUOTSHIFT";
      #binding-cells = <0>;
      bindings = <&mt RIGHT_SHIFT SINGLE_QUOTE>, <&kp DOUBLE_QUOTES>;
    };

    tdspace12: tdspace12 {
      compatible = "zmk,behavior-tap-dance";
      label = "TDSPACE12";
      #binding-cells = <0>;
      bindings = <&lt 1 SPACE>, <&lt 2 SPACE>, <&kp SPACE>;
    };

    tdaltenter: tdaltenter {
      compatible = "zmk,behavior-tap-dance";
      label = "TDALTENTER";
      #binding-cells = <0>;
      bindings = <&kp LEFT_ALT>, <&kp LA(ENTER)>, <&kp LA(LS(ENTER))>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    base {
      bindings = <
        &kp TAB                   &kp Q  &kp W  &kp E   &kp R        &kp T               &kp Y  &kp U                      &kp I         &kp O       &kp P          &kp GRAVE
        &mt LCTRL ESCAPE          &kp A  &kp S  &kp D   &kp F        &kp G               &kp H  &kp J                      &kp K         &kp L       &kp SEMICOLON  &mt RIGHT_CONTROL ENTER
        &mt LEFT_SHIFT BACKSLASH  &kp Z  &kp X  &kp C   &kp V        &kp B               &kp N  &kp M                      &kp COMMA     &kp PERIOD  &kp SLASH      &mt RIGHT_SHIFT SINGLE_QUOTE
        &tdwin  &tdaltenter         &lt 1 SPACE         &mt RIGHT_SHIFT BACKSPACE  &lt 2 DELETE
      >;
    };

    raise {
      bindings = <
        &trans    &kp N1     &kp N2    &kp N3     &kp N4                &kp N5                         &kp N6            &kp N7             &kp N8          &kp N9           &kp N0          &kp TILDE
        &trans    &kp EXCL   &kp AT    &kp HASH   &kp DOLLAR            &kp PERCENT                    &kp LEFT          &kp DOWN           &kp UP          &kp RIGHT        &kp MINUS       &kp EQUAL
        &kp PIPE  &kp CARET  &kp AMPS  &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp UNDERSCORE  &kp PLUS
        &trans     &trans                                       &trans                    &trans             &trans
      >;
    };

    Fn {
      bindings = <
        &sys_reset       &kp F1           &kp F2           &kp F3           &kp F4           &kp F5                   &kp F6                &kp F7         &kp F8           &kp F9                &kp F10     &rgb_ug RGB_TOG
        &bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &out OUT_BLE     &out OUT_USB             &kp HOME              &kp PAGE_DOWN  &kp PAGE_UP      &kp END               &kp F11     &kp F12
        &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &rgb_ug RGB_EFF          &kp C_BRIGHTNESS_DEC  &kp C_VOL_DN   &kp C_VOLUME_UP  &kp C_BRIGHTNESS_INC  &kp C_MUTE  &kp LS(LC(ESCAPE))
        &trans           &trans                            &trans                        &trans         &trans
      >;
    };
    extra {
      status = "reserved";
    };
  };
};
